# BINDINGS

# .Xmodmap flips several keys, among which are 
# Caps -> Meta
# Menu -> Super_R
# Alt_L <-> Altgr
# This basially means we can use the Menu button as
# a right mod key
exec_always xmodmap ~/.Xmodmap
set $mod Mod4 


# We should install UW Ttyp0 for this
# We use pango in case we need glyphs
font pango:Ttyp0 9 


# Useful/Misc bindings

## Common Programs
bindsym $mod+Return exec urxvt
bindsym $mod+q exec qutebrowser --backend webengine

## Reload the configuration file
bindsym $mod+Shift+c reload

## Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

## Exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -f Ttyp0:size=9 -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

## Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

## Screen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 5% # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 5% # decrease screen brightness

## Touchpad controls
bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

## Scratchpad keybindings (hides floating windows until the keybinding is used again)
## Do note that scratchpad show has a toggle effect
## Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

## Show the first scratchpad window
bindsym $mod+minus scratchpad show

## PROTIP: You can also dynamically set dmenu's colors this way:
bindsym $mod+d exec dmenu_run -nb "$bg" -nf "$fg" -sb "$fg" -sf "$oth" -fn "Ttyp0:size=9"


# Window bindings

bindsym $mod+Shift+q kill

## Navigation
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+ntilde focus right
bindsym $mod+semicolon focus right

## Move focused window
## We use both ntilde and semicolon for spanish and english layouts
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+ntilde move right
bindsym $mod+Shift+semicolon move right

## Splits
bindsym $mod+h split h
bindsym $mod+v split v

## Layouts
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

## Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

## Floating windows

### Toggle
bindsym $mod+Shift+space floating toggle

### Change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

### Focus the parent container
bindsym $mod+a focus parent

### Focus the child container
bindsym $mod+Shift+a focus child

### Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

### resize window (you can also use the mouse for that)
mode "resize" {
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym ntilde resize grow width 10 px or 10 ppt

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


# Workspaces

## Switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
bindsym $mod+Tab workspace next # Shuffles through workspaces 

## move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

## Workspace assignments

### Enable floating windows for Gimp (dialog boxes are EVERYWHERE) and load it in 3rd workspace
assign [class="Gimp"] 3

### Open qutebrowser on the second workspace
assign [class="qutebrowser"] 2


# Additional modes

## Power settings
set $mode_system System (l)ock, (e)xit, (s)uspend, (h)ibernate, (r)eboot, (S)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # back to normal
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Pause mode "$mode_system"


## Gaps mode
mode "gaps" {
    # Pressing "f" toggles fullscreen gap for single window
    bindsym f gaps outer all set 0, gaps inner all set 0 
    bindsym shift+f gaps outer all set 6, gaps inner all set 6

    # Back to normal
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+g mode "gaps"


# AESTHETICS

# Window colors

# Wal colors
# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use 
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources.
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0
set_from_resource $act i3wm.color1 #f0f0f0
set_from_resource $oth i3wm.color4 #f0f0f0 

set_from_resource $col1 i3wm.color1 #f0f0f0
set_from_resource $col2 i3wm.color2 #f0f0f0
set_from_resource $col2 i3wm.color3 #f0f0f0
set_from_resource $col3 i3wm.color4 #f0f0f0
set_from_resource $col4 i3wm.color5 #f0f0f0
set_from_resource $col5 i3wm.color6 #f0f0f0
set_from_resource $col6 i3wm.color7 #f0f0f0
set_from_resource $col7 i3wm.color8 #f0f0f0
set_from_resource $col8 i3wm.color9 #f0f0f0
set_from_resource $col9 i3wm.color10 #f0f0f0
set_from_resource $col10 i3wm.color11 #f0f0f0
set_from_resource $col11 i3wm.color12 #f0f0f0
set_from_resource $col12 i3wm.color13 #f0f0f0
set_from_resource $col13 i3wm.color14 #f0f0f0
set_from_resource $col14 i3wm.color15 #f0f0f0
set_from_resource $col15 i3wm.color16 #f0f0f0

set $urgent-bg-color $col8       

# class                 border  backgr. text indicator child_border
client.focused          $bg     $bg     $fg  $bg       $bg
client.focused_inactive $bg     $act    $fg  $act      $act
client.unfocused        $act    $act    $fg  $bg       $act
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg

client.background       $bg


# Hides the edges that indicate where new windows will be created
hide_edge_borders both

# Disable titlebars for i3-gaps
for_window [class="^.*"] border pixel 3 

# Enable gaps
gaps inner 6
gaps outer 6

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3blocks
    i3bar_command i3bar 
    height 22
    separator_symbol " "
    colors {
    	   background #010607bb
    	   #background #000000cc
    	   separator #000000
    	   
    	   # mode              border              background              text
    	   focused_workspace   $bg                 #010607bb               $bg
    	   inactive_workspace  #010607bb           #010607bb               $bg
    	   urgent_workspace    $urgent-bg-color    $urgent-bg-color        $bg-color
    }
}


# VARS

# Enables automatic back-and-forth. This makes it so that when going to a different workspace
# the only thing you need to return to the original workspace is the same key-binding.
#   i.e. $mod+2 <- focus on second workspace
#        $mod+2 <- return to original workspace using the same key-binding
workspace_auto_back_and_forth yes

# Disables mouse warping (i.e. mouse appears in the center of another screen when using different 
# outputs, such as a monitor, etc.)
mouse_warping none


# STARTUP
exec_always --no-startup-id ~/bin/launch-poly.sh